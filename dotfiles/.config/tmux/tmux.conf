unbind-key C-b
set -g prefix C-f
bind-key C-f send-prefix
set -g default-shell "/usr/bin/zsh"
set -sa terminal-features ",tmux-256color:RGB"
set -ga word-separators "=/" # word characters behave like zsh and nvim
set -g history-limit 30000
set -g renumber-windows on # renumber windows when removing and adding
set -g escape-time 0 # shorten command delay
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none
set -g automatic-rename on
set -g automatic-rename-format "#{b:pane_current_path}"
set -g set-clipboard off # fix bug where copying clipboard doesn't copy all text
set -g detach-on-destroy off
set -g focus-events on # for nvim compatibility
set -g clock-mode-colour colour135
set -g mouse on
set -g mode-keys vi # make mode keys default to vi for everything
# Statusline
set -g status-justify centre
set -g status-interval 1
set -g status-position bottom
set -g status-justify left
set -g status-left " 🐵 "
set -g status-right " #S 🐵 #H "
set -g status-right-length 50
set -g status-left-length 70
# Window
set -g monitor-activity off # do not display a status line message when activity occurs
set -g base-index 1 # base indexes should be 1, not 0
# Pane
set -g pane-base-index 1 # base indexes should be 1, not 0
set -g display-panes-time 10000 # choose how long display panes shows up
# Style
set -g message-style fg="#080808",bg="#ff8700",bold
set -g status-style none
set -g status-left-style fg="#121212",bg="#808080",bold
set -g status-right-style fg="#121212",bg="#808080",bold
set -g mode-style fg="#afd700",bg="#444444",bold
set -g window-status-current-style fg="#afff00",bg="#444444",bold
set -g window-status-current-format " #I#[fg=#bcbcbc]:#[fg=#ffffff]#W#[fg=#afff00]#F "
set -g window-status-style fg="#8a8a8a",bg="#262626",none
set -g window-status-format " #I#[fg=#3a3a3a]:#[fg=#bcbcbc]#W#[fg=#808080]#F "
set -g window-status-bell-style fg="#ffffff",bg="#800000",bold
set -g pane-border-style fg="#00afff"
set -g pane-active-border-style fg="#00afff"

# Split relative to current path
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"
# Move between panes
bind-key h select-pane -L
bind-key C-h select-pane -L
bind-key j select-pane -D
bind-key C-j select-pane -D
bind-key k select-pane -U
bind-key C-k select-pane -U
bind-key l select-pane -R
bind-key C-l select-pane -R
# Pushing windows
bind-key > swap-window -t +1 \; select-window -t +1
bind-key < swap-window -t -1 \; select-window -t -1
# Pushing panes
bind-key H select-pane -m \; split-window -fhb \; swap-pane -d \; select-pane -M \; last-pane \; kill-pane
bind-key J select-pane -m \; split-window -fv  \; swap-pane -d \; select-pane -M \; last-pane \; kill-pane
bind-key K select-pane -m \; split-window -fvb \; swap-pane -d \; select-pane -M \; last-pane \; kill-pane
bind-key L select-pane -m \; split-window -fh  \; swap-pane -d \; select-pane -M \; last-pane \; kill-pane
bind-key = select-layout tiled
# Visual selection
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle \; send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xsel -i --clipboard"
# Create window and session
bind-key c new-window -c "#{pane_current_path}"
bind-key C-c new-session \; command-prompt -p "Enter session name: " "rename-session '%%'"
# Mouse: pane doesn't end when you drag with main clicker
unbind -T copy-mode-vi MouseDragEnd1Pane
# Mouse: left click goes to location and clears previous visual selection
unbind -n -T copy-mode-vi MouseDown1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \; send -X clear-selection
# Mouse: copy with right click
unbind -n -T copy-mode-vi MouseDown3Pane
bind -T copy-mode-vi MouseDown3Pane send-keys -X copy-pipe "xsel -i --clipboard"
