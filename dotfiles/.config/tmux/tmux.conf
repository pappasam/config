# Samuel Roeca's Tmux configuration. Toggle folds with 'za'.
# Prefix from <C-b> to <C-f> {{{

unbind-key C-b
set -g prefix C-f
bind-key C-f send-prefix

# }}}
# General settings {{{

# make zshell default shell (non-login)
set -g default-command $SHELL

# Default terminal is tmux, and ensure things work on Alacritty
set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',alacritty:Tc'

# Update word characters to be more like zsh and Vim
set -ga word-separators "=/"

# History saved for browsing
set -g history-limit 30000

# Renumber windows when removing and adding
set -g renumber-windows on

# Shorten command delay
set -g escape-time 0

# Loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none

# The messages
set -g message-style fg=colour232,bg=colour208,bold

# Window renaming: use current directory basename
set -g automatic-rename on
set -g automatic-rename-format '#{b:pane_current_path}'

# FIX BUG where copying to clipboard does not copy all text
set -g set-clipboard off

# When the last shell in a session is destroyed,
# switch to another active session. Once all sessions are closed, tmux exits
set -g detach-on-destroy off

# Focus events (for Vim compatibility)
set -g focus-events on

# }}}
# Status line {{{

set -g status-justify centre
set -g status-interval 1
set -g status-position bottom
set -g status-style fg=colour135,bg=colour234,dim
set -g status-left "#[fg=colour233,bg=colour244,bold] #h :: #S #{prefix_highlight} "
set -g status-right "#{prefix_highlight}#[fg=colour233,bg=colour244,bold] %d %b %Y :: %l:%M %p "
set -g status-right-length 50
set -g status-left-length 70

# }}}
# Window {{{

# The modes which determine coloring in foreground, background, and clock mode
set -g clock-mode-colour colour135
set -g mode-style fg=colour79,bg=colour238,bold

# do NOT display a status line message when activity occurs
set -g monitor-activity off

# Window status
set -g window-status-current-style fg=colour81,bg=colour238,bold
set -g window-status-current-format " #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour81]#F "
set -g window-status-style fg=colour248,bg=colour235,none
set -g window-status-format " #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F "
set -g window-status-bell-style fg=colour255,bg=colour1,bold

# Base indexes should be 1, not 0
set -g base-index 1
set -g pane-base-index 1

# }}}
# Pane {{{

# Borders
set -g pane-border-style bg=colour235,fg=colour238
set -g pane-active-border-style bg=colour236,fg=colour81

# Choose how long display panes shows up
set -g display-panes-time 10000

# }}}
# Key bindings {{{

# Make mode keys default to vi for everything
set -g mode-keys vi

# Split panes: same defaults, but relative to current path
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# Moving between panes with Vim movement keys
# Since I make this mistake constantly, both Ctl and non-Ctl work same
bind-key h select-pane -L
bind-key C-h select-pane -L
bind-key j select-pane -D
bind-key C-j select-pane -D
bind-key k select-pane -U
bind-key C-k select-pane -U
bind-key l select-pane -R
bind-key C-l select-pane -R

# Moving the windows themselves
bind-key > swap-window -t +1 \; select-window -t +1
bind-key < swap-window -t -1 \; select-window -t -1

# Moving panes exactly like Vim's <C-w>[HJKL=]
bind-key H select-pane -m \; split-window -fhb \; swap-pane -d \; select-pane -M \; last-pane \; kill-pane
bind-key J select-pane -m \; split-window -fv  \; swap-pane -d \; select-pane -M \; last-pane \; kill-pane
bind-key K select-pane -m \; split-window -fvb \; swap-pane -d \; select-pane -M \; last-pane \; kill-pane
bind-key L select-pane -m \; split-window -fh  \; swap-pane -d \; select-pane -M \; last-pane \; kill-pane
bind-key = select-layout tiled

# Visual selection / copy functionality behaves like Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle \; send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xsel -i --clipboard"

# Make new tmux windows open with directory in current pane
# (if desire 'next to current window', pass -a option to new-window before -c)
bind-key c new-window -c "#{pane_current_path}"

# Create new session; Choose session name; Name first window 'edit'
bind-key C-c new-session \;\
  command-prompt -p "Enter session name: " "rename-session '%%'"

# }}}
# Mouse bindings {{{

set -g mouse on

# Pane doesn't end when you drag with main clicker
unbind -T copy-mode-vi MouseDragEnd1Pane

# Left click goes to location and clears previous visual selection
unbind -n -T copy-mode-vi MouseDown1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \; send -X clear-selection

# Copy with right click
unbind -n -T copy-mode-vi MouseDown3Pane
bind -T copy-mode-vi MouseDown3Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel clipboard > /dev/null"

# }}}
# Plugins from tpm {{{

# Options for: nhdaly/tmux-better-mouse-mode
set -g @scroll-down-exit-copy-mode "on"
set -g @scroll-without-changing-pane "on"
set -g @scroll-in-moused-over-pane "on"
set -g @scroll-speed-num-lines-per-scroll "3"
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Install plugins: "prefix + I"
# Update plugins: "prefix + U"
# Uninstall plugins not in list: "prefix + <Alt>u"

# Initialize TMUX plugin manager (keep line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# }}}
